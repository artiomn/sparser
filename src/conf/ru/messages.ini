;
; messages.ini - 'TRAKT' dispatcher centralisation message description.
;

; Encoding: UTF-8. Language: russian.

; Fields order is significant!
; Fields, beginning with '$' is a metafields.
; Fields, beginning with '@' is a control words.
; Message fields in format: [*]"size in bytes"|1/"relation size","output specif ication","Field description"
; "output specification":
;        x  - for hex,
;        p  - hex dump,
;        /* o  - octal, */
;        b  - for bin,
;        i  - for signed integer decimal,
;        u  - unsigned decimal,
;        d  - date.
;        t  - time.
;        m  - date and time.
;        c  - printable symbols.
;        n  - invisible field.
;
; Number format examples:
;    101  - dec,
;    0xFF - hex,
;    0700 - oct,
;    0b11 - bin.
;
; Тип сообщения указывается числом в имени секции.
; Все сообщения расположены в порядке возрастания типов.
; Просьба сохранять порядок.
;
; Числа могут быть представлены в:
;    1. Шестнадцатеричном виде. Начинаются с 0x (например 0xff).
;    2. Десятичном виде. Начинаются с цифр 1..9 (например 255).
;    3. Восьмеричном виде. Начинаются с 0 (например 0777).
;    4. Двоичном виде. Начинаются с 0b (например 0b11011).
;
; Поля, которые начинаются с '$' - это метаполя. Они не содержатся в полученных данных.
; Например, флаг составного сообщения или описание сообщения.
; Поля, начинающиеся с '@' - управляющие конструкции. Например, условия.
; 
; Всё, что начинается с латинской буквы или символа подчёркивания - поле данных сообщения.
; Поля читаются в том виде, в котором они описаны в файле.
; Формат поля: [*]"размер в байтах"|1/"относительный размер","формат вывода","Описание поля"
;
; Размер поля может указываться целым числом байт.
; Если поле повторяется, перед размером поля указывается символ '*'.
; Если поле не имеет фиксированного размера, а занимает часть остатка, указывается доля
; поля в остатке. Для этого используется дробь в формате 1/размер.
;
; Формат вывода задаёт в каком формате будет отображаться поле.
; Доступны следующие форматы вывода:
;     x - шестнадцатеричный формат,
;     p - шестнадцатеричный дамп,
;     /* o - восьмеричный формат, */
;     b - двоичный формат,
;     i - десятичное целое,
;     u - десятичное беззнаковое целое,
;     c - строка символов,
;     t - время,
;     d - дата,
;     m - дата и время,
;     n - не выводить поле.
;
; Описание поля  - обычная строка, которая будет выводиться перед значением
; (зависит от формата вывода сообщения, в целом).
;
; Данные, не описанные полями, выводятся, как остаток.
;
; Метаполя:
;    $msg_descr            - описание сообщения, в целом.
;    $is_compound          - флаг составного сообщения (сообщения-контейнера, содержащего другие).
;    $remainder_descr      - описание остатка сообщения (например "Таблица сигнализации").
;    $error_level          - текущий уровень ошибки.
;    $response             - описание ответа для поля.
;
; Формат описания ответа:
;    $response = поле, выражение, уровень ошибки, описание
;
;    поле           - это поле, к которому привязан ответ.
;    выражение      - если выражение не равно 0, ответ будет показан рядом с полем.
;    уровень ошибки - если данный ответ выводится, ему назначается уровень ошибки, который будет добавлен
;                     к общему уровню.
;    описание       - текст ответа.
; Поля, на которые ссылается ответ, должны быть предварительно объявлены.
;
; Управляющие конструкции:
;    @if       = <выражение>  - следующий блок будет обработан, если выражение истинно.
;    @elif     = <выражение>  - следующий блок будет обработан, если предыдущее условие ложно, а выражение истинно.
;    @else     = 1            - следующий блок будет обработан, если предыдущее условие ложно.
;    @repeat   = *            - повторить блок указанное число раз. Если указан символ '*' - повторять до конца сообщения.
;    @end      = 1            - каждый блок должен заканчиваться этим оператором.
;
; Выражения имеют C-синтаксис и оперируют числовыми значениями.
; Вычисление правой части выражения не производится, если результат выводится из левой части.
; Т.е., возможны конструкции с отсутствующими полями (применяется в фильтрах).
; Операторы:
;    1. Логические:
;       a || b             - логическое "ИЛИ".
;       a && b             - логическое "И".
;       a |  b             - побитовое "ИЛИ".
;       a ^  b             - побитовое "ИСКЛЮЧАЮЩЕЕ ИЛИ" ("СЛОЖЕНИЕ ПО МОДУЛЮ 2").
;       a &  b             - побитовое "И".
;    2. Сравнения:
;       a != b             - "НЕ РАВНО".
;       a == b             - "РАВНО".
;       a <= b             - "МЕНЬШЕ ИЛИ РАВНО".
;       a >= b             - "БОЛЬШЕ ИЛИ РАВНО".
;       a >  b             - "БОЛЬШЕ".
;       a <  b             - "МЕНЬШЕ".
;    3. Сдвига:
;       a >> b             - "СДВИГ ВПРАВО" (значение а сдвигается на b бит).
;       a << b             - "СДВИГ ВЛЕВО" (значение а сдвигается на b бит).
;    4. Арифметические:
;       a +  b             - "СЛОЖЕНИЕ".
;       a -  b             - "ВЫЧИТАНИЕ".
;       a %  b             - "ПОЛУЧЕНИЕ ОСТАТКА" (остаток от деления a на b).
;       a /  b             - "ЦЕЛОЧИСЛЕННОЕ ДЕЛЕНИЕ".
;       a *  b             - "УМНОЖЕНИЕ".
;    5. Параметров полей:
;       sizeof(<field>)    - возвращает действительный размер поля с именем field в байтах (например: sizeof(type) == 2).
;       offset(<field>)    - возвращает смещение поля в байтах от начала данных (т.е. от конца заголовка).
;       exists(<field>)    - возвращает 1, если поле существует или 0, в ином случае.
;
; Функции, доступные для выражений:
;     abs(a)               - возвращает модуль a.
;     pow(base, power)     - возвращает base в степени power.
;     min(a0, a1, ..., an) - возвращает минимальное значение из переданных.
;     max(a0, a1, ..., an) - возвращает максимальное значение из переданных.
;     time(year, month, day, hour, min, sec) - возвращает время в числовой форме.
;     now_y()              - не реализовано.
;     now_m()              - не реализовано.
;     now_d()              - не реализовано.
;     now_h()              - не реализовано.
;     now_n()              - не реализовано.
;     now_s()              - не реализовано.
;
; Помимо метаполей, применяемых в этом файле и описанных выше, а также полей заголовка,
; описанных в header.ini, для выражений доступны следующие метаполя:
;     $remainder           - остаток данных, не покрытый полями.

[0x0000]

$msg_descr        = пустое сообщение
$is_compound      = 0


[0x0473]

$msg_descr        = ? неизвестное с порта 7004
$is_compound      = 0


; Message structure name is a message type.
; Message type in hex with preceding "0x".
[0x0475]
; Message description.
$msg_descr         = составное сообщение стыка с АРМ ДНЦ и АРМ ШН ДЦ
; Compound message flag (0 or 1).
$is_compound       = 1
; Compound message hasn't fields.


[0X04F6]

$msg_descr        = ? неизвестное из файла udp.mddhh программы "MIX"
$is_compound      = 0


; Simple message without fields.
[0x0501]

$msg_descr        = мгновенные значения телесигнализации [ТС]
$is_compound      = 0
; Message for description remainder of message.
$remainder_descr  = Таблица телесигнализации


[0x0502]

$msg_descr        = реакция на ТУ [РТ]
$is_compound      = 0

_srv0             = 4,  x,Служебный код 0 (код ОТУ)
tc_code           = 4,  x,Код телеуправления (оциональный?)
_srv1             = 2,  x,Служебный код 1 (Адрес назначения?)
_srv2             = 1,  n,Служебный код 2
msg_id            = 1,  x,ID сообщения (опциональный)
msg_time          = 4,  m,Время из заголовка сообщения (опциональный)
cmd_status        = 4,  i,Статус команды
_srv3             = 12, n,Служебный код 3

; TU header without length.
h_type            = 2, x,Тип [0x0502]
h_reciever        = 2, x,Получатель
h_sender          = 2, x,Отправитель
h_time            = 4, x,Время
h_id              = 1, x,Id
h_reserverd       = 1, x,Резерв

$response         = cmd_status, cmd_status == -1, 1,ошибка исполнения команды ТУ
$response         = cmd_status, cmd_status == -2, 1,команда ТУ не найдена в нормативной базе
$response         = cmd_status, cmd_status == -3, 1,адрес не найден в нормативной базе
$response         = cmd_status, cmd_status == -4, 1,ошибка декодирования команды ТУ 32/10
$response         = cmd_status, cmd_status == -5, 1,в модуле вывода установлен режим "Без реализации"
$response         = cmd_status, cmd_status == -6, 1,переполнение очереди модуля вывода
$response         = cmd_status, (cmd_status == 0) || (cmd_status == 1), 0,КП приянл ТУ
$response         = cmd_status, cmd_status == 2, 0,мастер начал алгоритм вывода команды ТУ
$response         = cmd_status, cmd_status == 3, 0,модуль вывода завершил вывод по таймауту
$response         = cmd_status, cmd_status == 4, 0,команда ТУ была выполнена
$response         = cmd_status, cmd_status == 5, 1,ошибка выполнения команды ТУ модулем вывода
;$response         = cmd_status, cmd_status == 7, 1,маршрут накоплен


[0x0503]

$msg_descr        = статус каналов между КП (диагностическая информация) [ТИ]
$is_compound      = 0

; Repeated field in the end of the message.
@repeat = *
   channel_stat = 2, b,  Адрес      |Статус передачи
@end = 1


[0x0504]

$msg_descr                 = конфигурация и состояние КП (настроечная таблица) [НТ]
$is_compound               = 0

length                     = 1, i,Длина описания состояния
type                       = 1, x,Подтип

; Элемент присутствует, если соответствующие биты исправности модулей и маски
; разрешения обмена активны. Каждый бит соответствует УСО в порядке возрастания
; номеров.
modules_worked             = 1, b,Наличие модулей
modules_exchange_mask      = 1, b,Маска обмена модулей
modules_exch_mask_can_a    = 1, b,Маска обмена по CAN A
modules_exch_mask_can_b    = 1, b,Маска обмена по CAN B

$response                  = type, type == 0x41, 0,информация о исправности модулей
$response                  = type, type == 0x45, 0,информация о версии модулей

$response                  = modules_worked, modules_worked & 0x1, 0,ВЫ_МЛ_ОСН
$response                  = modules_worked, modules_worked & 0x2, 0,ВЫ_МЛ_РЕЗ
$response                  = modules_worked, modules_worked & 0x4, 0,ВЫ_СТ_ОСН
$response                  = modules_worked, modules_worked & 0x8, 0,ВЫ_СТ_РЕЗ
$response                  = modules_worked, modules_worked & 0x10, 0,ВВОК_ОСН
$response                  = modules_worked, modules_worked & 0x20, 0,ВВОК_РЕЗ
$response                  = modules_worked, modules_worked & 0x40, 0,ВВ_ОСН
$response                  = modules_worked, modules_worked & 0x80, 0,ВВ_РЕЗ

$response                  = modules_exchange_mask, modules_exchange_mask & 0x1, 0,ВЫ_МЛ_ОСН
$response                  = modules_exchange_mask, modules_exchange_mask & 0x2, 0,ВЫ_МЛ_РЕЗ
$response                  = modules_exchange_mask, modules_exchange_mask & 0x4, 0,ВЫ_СТ_ОСН
$response                  = modules_exchange_mask, modules_exchange_mask & 0x8, 0,ВЫ_СТ_РЕЗ
$response                  = modules_exchange_mask, modules_exchange_mask & 0x10, 0,ВВОК_ОСН
$response                  = modules_exchange_mask, modules_exchange_mask & 0x20, 0,ВВОК_РЕЗ
$response                  = modules_exchange_mask, modules_exchange_mask & 0x40, 0,ВВ_ОСН
$response                  = modules_exchange_mask, modules_exchange_mask & 0x80, 0,ВВ_РЕЗ

$response                  = modules_exch_mask_can_a, modules_exch_mask_can_a & 0x1, 0,ВЫ_МЛ_ОСН
$response                  = modules_exch_mask_can_a, modules_exch_mask_can_a & 0x2, 0,ВЫ_МЛ_РЕЗ
$response                  = modules_exch_mask_can_a, modules_exch_mask_can_a & 0x4, 0,ВЫ_СТ_ОСН
$response                  = modules_exch_mask_can_a, modules_exch_mask_can_a & 0x8, 0,ВЫ_СТ_РЕЗ
$response                  = modules_exch_mask_can_a, modules_exch_mask_can_a & 0x10, 0,ВВОК_ОСН
$response                  = modules_exch_mask_can_a, modules_exch_mask_can_a & 0x20, 0,ВВОК_РЕЗ
$response                  = modules_exch_mask_can_a, modules_exch_mask_can_a & 0x40, 0,ВВ_ОСН
$response                  = modules_exch_mask_can_a, modules_exch_mask_can_a & 0x80, 0,ВВ_РЕЗ

$response                  = modules_exch_mask_can_b, modules_exch_mask_can_b & 0x1, 0,ВЫ_МЛ_ОСН
$response                  = modules_exch_mask_can_b, modules_exch_mask_can_b & 0x2, 0,ВЫ_МЛ_РЕЗ
$response                  = modules_exch_mask_can_b, modules_exch_mask_can_b & 0x4, 0,ВЫ_СТ_ОСН
$response                  = modules_exch_mask_can_b, modules_exch_mask_can_b & 0x8, 0,ВЫ_СТ_РЕЗ
$response                  = modules_exch_mask_can_b, modules_exch_mask_can_b & 0x10, 0,ВВОК_ОСН
$response                  = modules_exch_mask_can_b, modules_exch_mask_can_b & 0x20, 0,ВВОК_РЕЗ
$response                  = modules_exch_mask_can_b, modules_exch_mask_can_b & 0x40, 0,ВВ_ОСН
$response                  = modules_exch_mask_can_b, modules_exch_mask_can_b & 0x80, 0,ВВ_РЕЗ

@if = type == 0x41
; Modules state data.
   @if = (modules_worked & 0x1) && (modules_exchange_mask & 0x1)
      uso_out_jun_master_worked  = 1, x,Состояние работы младшего основного УСО вывода
      $response                  = uso_out_jun_master_worked, uso_out_jun_master_worked == 0, 1,младшее основное УСО вывода не работает
      $response                  = $remainder, uso_out_jun_master_worked == 0, 1,младшее основное УСО вывода не работает
   @end = 1

   @if = (modules_worked & 0x2) && (modules_exchange_mask & 0x2)
      uso_out_jun_slave_worked   = 1, x,Состояние работы младшего резервного УСО вывода
      $response                  = uso_out_jun_slave_worked, uso_out_jun_slave_worked == 0, 1,младшее резервное УСО вывода не работает
   @end = 1

   @if = (modules_worked & 0x4) && (modules_exchange_mask & 0x4)
      uso_out_sen_master_worked  = 1, x,Состояние работы старшего основного УСО вывода
      $response                  = uso_out_sen_master_worked, uso_out_sen_master_worked == 0, 1,старшее основное УСО вывода не работает
   @end = 1

   @if = (modules_worked & 0x8) && (modules_exchange_mask & 0x8)
      uso_out_sen_slave_worked   = 1, x,Состояние работы старшего резервного УСО вывода
      $response                  = uso_out_sen_slave_worked, uso_out_sen_slave_worked == 0, 1,старшее резервное УСО вывода не работает
   @end = 1

   @if = (modules_worked & 0x10) && (modules_exchange_mask & 0x10)
      uso_vvok_master            = 1, x,Состояние основного УСО ВВОК
      $response                  = uso_vvok_master, uso_vvok_master == 0, 1,основное УСО ВВОК не работает
   @end = 1

   @if = (modules_worked & 0x20) && (modules_exchange_mask & 0x20)
      uso_vvok_slave             = 1, x,Состояние работы резервного УСО ВВОК
      $response                  = uso_vvok_slave, uso_vvok_slave == 0, 1,резервное УСО ВВОК не работает
   @end = 1

   ; Non fixed-width  fields (IN master and slave).
   @if = (modules_worked & 0xC0) && (modules_exchange_mask & 0xC0)
      uso_in_master_worked       = 1/2, x,Состояние работы основного УСО ввода
      uso_in_slave_worked        = 1/2, x,Состояние работы резервного УСО ввода

      @if = exist(uso_in_master_worked)
         $response = uso_in_master_worked, (uso_in_master_worked == 0), 1,основное УСО ввода не работает
      @end = 1
      @if = exist(uso_in_slave_worked)
         $response = uso_in_slave_worked, (uso_in_slave_worked == 0), 1,резервное УСО ввода не работает
      @end = 1
   @elif = (modules_worked & 0x40) && (modules_exchange_mask & 0x40)
      $remainder_descr  = основное УСО ввода не работает
      $response         = $remainder, ($remainder == 0), 1,основное УСО ввода не работает
   @elif = (modules_worked & 0x80) && (modules_exchange_mask & 0x80)
      $remainder_descr  = Состояние работы резервного УСО ввода
      $response         = $remainder, ($remainder == 0), 1,резервное УСО ввода не работает
   @end = 1

@elif = type == 0x45
; Modules configuration data.
   mls_master_hw_version      = 2, x,Версия шасси основного МЛС
   mls_master_sw_version      = 2, x,Версия прошивки основного МЛС
; No:
;   mls_slave_hw_version       = 2,x,MLS slave hardware version (shassi)
;   mls_slave_sw_version       = 2,x,MLS slave software version

   @if = (modules_worked & 0x1) && (modules_exchange_mask & 0x1)
      uso_out_jun_master_srv0     = 4, n,Служебное поле 1
      uso_out_jun_master_srv      = 2, n,Служебное поле 2
      uso_out_jun_master_ver      = 2, x,Версия младшего основного УСО вывода
   @end = 1

   @if = (modules_worked & 0x2) && (modules_exchange_mask & 0x2)
      uso_out_jun_slave_srv0     = 4, n,Служебное поле 1
      uso_out_jun_slave_srv      = 2, n,Служебное поле 2
      uso_out_jun_slave_ver      = 2, x,Версия младшего резервного УСО вывода
   @end = 1

   @if = (modules_worked & 0x4) && (modules_exchange_mask & 0x4)
      uso_out_sen_master_srv0     = 4, n,Служебное поле 1
      uso_out_sen_master_srv      = 2, n,Служебное поле 2
      uso_out_sen_master_ver      = 2, x,Версия старшего основного УСО вывода
   @end = 1

   @if = (modules_worked & 0x8) && (modules_exchange_mask & 0x8)
      uso_out_sen_slave_srv0     = 4, n,Служебное поле 1
      uso_out_sen_slave_srv      = 2, n,Служебное поле 2
      uso_out_sen_slave_ver      = 2, x,Версия старшего резервного УСО вывода
   @end = 1

   @if = (modules_worked & 0x10) && (modules_exchange_mask & 0x10)
      uso_vvok_master_srv0       = 4, n,Служебное поле 1
      uso_vvok_master_srv        = 2, n,Служебное поле 2
      uso_vvok_master_ver        = 2, x,Версия основного УСО ВВОК
   @end = 1

   @if = (modules_worked & 0x20) && (modules_exchange_mask & 0x20)
      uso_vvok_slave_srv0        = 4, n,Служебное поле 1
      uso_vvok_slave_srv         = 2, n,Служебное поле 2
      uso_vvok_slave_ver         = 2, x,Версия резервного УСО ВВОК
   @end = 1

   @if = (modules_worked & 0x40) && (modules_exchange_mask & 0x40)
      uso_in_master_srv0        = 4, n,Служебное поле 1
      uso_in_master_srv         = 2, n,Служебное поле 2
      uso_in_master_ver         = 2, x,Версия основного УСО ввода
   @end = 1

   @if = (modules_worked & 0x80) && (modules_exchange_mask & 0x80)
      uso_in_slave_srv0        = 4, n,Служебное поле 1
      uso_in_slave_srv         = 2, n,Служебное поле 2
      uso_in_slave_ver         = 2, x,Версия резервного УСО ввода
   @end = 1

@end = 1


[0x0505]

$msg_descr        = команда телеуправления [ТУ]
$is_compound      = 0
;$remainder_descr  = Telecontrol table

_srv0             = 4, n,Служебное поле 0
tc_attr           = 2, x,Атрибут команды ТУ
tc_code           = 2, x,Код команды ТУ
_srv1             = 4, x,Код ОТУ
_srv2             = 4, n,Служебное поле 2


[0x0506]

$msg_descr        = технологическая команда [ТК] (ответ на запрос изменения конфигурации)
$is_compound      = 0

@repeat = *
   length            = 2, i,Длина
   type              = 1, x,Тип
   param             = 1, b,Параметр

   $response         = type, type == 0x31, 0,блок запроса на изменение режима формирования групп ТС
   $response         = type, type == 0x32, 0,блок запроса на изменение режима формирования уровней сигнала ТС
   $response         = type, type == 0x33, 0,блок запроса на изменение режима формирования уровней сигнала ТУ
   $response         = type, type == 0x34, 0,блок запроса на изменение режима формирования откликов фильтров ТУ
   $response         = type, type == 0x35, 0,блок запроса на изменение режима формирования уровней ТС в канале

   $response         = param, (type == 0x31) && (param == 0),  0,не передавать группы ТС
   $response         = param, (type == 0x31) && (param != 0),  0,передавать группы ТС
   $response         = param, (type == 0x32) && (param == 0),  0,не передавать уровни сигнала ТС
   $response         = param, (type == 0x32) && (param != 0),  0,передавать уровни сигнала ТС
   $response         = param, (type == 0x33) && (param == 0),  0,не передавать уровни сигнала ТУ
   $response         = param, (type == 0x33) && (param != 0),  0,передавать уровни сигнала ТУ
   $response         = param, (type == 0x34) && (param == 0),  0,не передавать отклики фильтров ТУ
   $response         = param, (type == 0x34) && (param == 1),  0,выдавать массивы откликов фильтра с частотой 500 Гц
   $response         = param, (type == 0x34) && (param == 2),  0,выдавать массивы откликов фильтра с частотой 600 Гц
   $response         = param, (type == 0x34) && (param == 3),  0,выдавать массивы откликов фильтра с частотой 700 Гц
   $response         = param, (type == 0x34) && (param == 4),  0,выдавать массивы откликов фильтра с частотой 800 Гц
   $response         = param, (type == 0x34) && (param > 127), 0,циклическая передача по четырём частотам
   $response         = param, (type == 0x35) && (param == 0),  0,не передавать уровни сигнала ТС в канале
   $response         = param, (type == 0x35) && (param == 1),  0,выдавать массивы уровней сигнала ТС для 1-го канала
   $response         = param, (type == 0x35) && (param == 2),  0,выдавать массивы уровней сигнала ТС для 2-го канала
   $response         = param, (type == 0x35) && (param == 3),  0,выдавать массивы уровней сигнала ТС для 3-го канала
   $response         = param, (type == 0x35) && (param == 4),  0,выдавать массивы уровней сигнала ТС для 4-го канала
   $response         = param, (type == 0x35) && (param > 127), 0,циклическая передача по четырём каналам по 23 фрейма для каждого
@end = 1


[0x0507]

$msg_descr        = установочная команда [КУ]
$is_compound      = 0


[0x0508]

$msg_descr        = тестовая информация шлюзовых машин [ТШ]
$is_compound      = 0


[0x0509]

$msg_descr        = команда управления шлюзовой машиной [ШК] (возможно формат некорректен)
$is_compound      = 0

cmd_code          = 2, x,код команды

$resposne         = cmd_code, cmd_code == 0x02, 0,Перезапуск шлюзовой машины
$resposne         = cmd_code, cmd_code == 0x03, 0,Установка активности по обмену с сервером
$resposne         = cmd_code, cmd_code == 0x04, 0,Снятие статуса активности по обмену с сервером
$resposne         = cmd_code, cmd_code == 0x05, 0,Резерв
$resposne         = cmd_code, cmd_code == 0x06, 0,Резерв
$resposne         = cmd_code, cmd_code == 0x1D, 0,Установка системного времени
$resposne         = cmd_code, cmd_code == 0x1E, 0,Корректировка системного времени КП
$resposne         = cmd_code, cmd_code == 0x1F, 0,Тестирование шлюзовой машины


[0x050A]

$msg_descr        = номер поезда, индекс и позиция
$is_compound      = 0

station_esr       = 8, c,ЕСР станции
e_name            = 6, c,Имя элемента
e_type            = 2, b,Тип элемента
busy              = 4, b,Сигнал занятости (номер канала, номер ТС)
ts_index          = 4, x,Индекс ТС в битовой карте
train_snum        = 2, i,Системный номер поезда
train_fnum        = 2, i,Фактический номер поезда
iw1               = 2, x,ЕСР станции отправления
iw2               = 2, x,Номер состава
iw3               = 2, x,ЕСР станции назначения
reserved          = 2, n,Зарезервировано


[0x0511]

$msg_descr        = признаки мигания ТС
$is_compound      = 0
$remainder_descr  = Таблица мигания


[0x0512]

$msg_descr        = дополнительные значения ТС
$is_compound      = 0
$remainder_descr  = Таблица телесигнализации


[0x0513]

$msg_descr        = состояние цифровых каналов между КП
$is_compound      = 0

node_netaddr_jun  = 1, x,Сетевой адрес узла, доступный по чтению на младшем канале
node_netaddr_sen  = 1, x,Сетевой адрес узла, доступный по чтению на старшем канале
_srv0             = 1, n,Служебный код
_srv1             = 1, n,Служебный код
sel_state_jun     = 1, b,Код состояния селектора (младший канал)
sel_state_sen     = 1, b,Код состояния селектора (старший канал)
_srv2             = 2, n,Служебный код
_srv3             = 4, n,Служебный код
_reserved         = 8, n,Зарезервировано

$response         = sel_state_jun, sel_state_jun == 0, 2,младший канал не работает
$response         = sel_state_sen, sel_state_sen == 0, 2,старший канал не работает
$response         = sel_state_jun, sel_state_jun == 1, 0,младший канал работает нормально
$response         = sel_state_sen, sel_state_sen == 1, 0,старший канал работает нормально
$response         = sel_state_jun, sel_state_jun == 2, 1,младший канал переключен на резерв
$response         = sel_state_sen, sel_state_sen == 2, 1,старший канал переключен на резерв


[0x0514]

$msg_descr        = состояние аналоговых каналов
$is_compound      = 0
$remainder_descr  = Данные аналоговых каналов

length            = 2, i,Длина данных
type              = 1, x,Тип пакета

@if = type == 0x31
; TS group values block.
   frame             = 1, x,Номер фрейма
   ts_values1        = 4, x,Значения телесигнализации в 1 частотном канале
   ts_values2        = 4, x,Значения телесигнализации в 2 частотном канале
   ts_values3        = 4, x,Значения телесигнализации в 3 частотном канале
   ts_values4        = 4, x,Значения телесигнализации в 4 частотном канале
@elif = type == 0x32
; TS signal levels block.
   _srv0             =  1, x,Параметр
   ts_levels         = *2, x,Уровень сигнала телесигнализации
@elif = type == 0x33
; TU signal levels block.
   _srv0             =  1, x,Параметр
   tc_level          = *2, x,Уровень сигнала телеуправления
@elif = type == 0x34
; TU filters response block.
   freq              =  1, x,Частота
   fl_response       = *2, x,Ответ фильтров телеуправления

   $response         = freq, freq == 1, 0,500 Гц
   $response         = freq, freq == 2, 0,600 Гц
   $response         = freq, freq == 3, 0,700 Гц
   $response         = freq, freq == 4, 0,800 Гц
@elif = type == 0x35
   frame             =  1, x,Номер фрейма
   ts_level          = *2, x,Уровни телесигнализации

   $response         = frame, (frame >= 00) && (frame <= 23), 0,1 канал
   $response         = frame, (frame >= 24) && (frame <= 47), 0,2 канал
   $response         = frame, (frame >= 48) && (frame <= 71), 0,3 канал
   $response         = frame, (frame >= 72) && (frame <= 95), 0,4 канал
@elif = (type == 0x36) || (type == 0x37)
; 0x36 - passive frequency, 0x37 - active frequency.
   frame             =  1, x,Номер кадра
   ts_level          = *2, x,Ответ фильтров телесигнализации

   $response         = frame, (frame >= 00) && (frame <= 23), 0,1 канал
   $response         = frame, (frame >= 24) && (frame <= 47), 0,2 канал
   $response         = frame, (frame >= 48) && (frame <= 71), 0,3 канал
   $response         = frame, (frame >= 72) && (frame <= 95), 0,4 канал
@end = 1


[0x0523]

$msg_descr        = ? версия ПО ?
$is_compound      = 0

; messages.ini
; Artiom N.(cl)2012
; EOF
